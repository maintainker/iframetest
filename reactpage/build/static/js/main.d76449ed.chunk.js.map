{"version":3,"sources":["poster.jsx","cart_head.jsx","cart_basket.jsx","cart_calc.jsx","cart.jsx","App.js","serviceWorker.js","index.js"],"names":["PosterPage","changeBasket","poster","onclick_add","useCallback","v","onclick_remove","Posters","map","className","key","idx","src","alt","count","price","onClick","CartHead","i","length","Basket","List","name","Calculator","totalPrice","tax","changeFin","totalposter","Math","round","href","Cart","useState","finOn","setFinON","move","keyframes","CartFin","styled","section","console","log","App","setPoster","fnName","value","item","newBasket","concat","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sPAyDeA,G,MArDI,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,aAAaC,EAAW,EAAXA,OACxBC,EAAeC,uBAAY,SAACC,GAC9BJ,EAAa,MAAMI,KACrB,CAACJ,IACGK,EAAkBF,uBAAY,SAACC,GACjCJ,EAAa,SAASI,KACxB,CAACJ,IAEGM,EAAU,WA2BZ,OA1BgBL,EAAOM,KAAI,SAACH,GACxB,OACI,yBAAKI,UAAU,SAASC,IAAKL,EAAEM,KAC3B,yBAAKC,IAAG,sBAAiBP,EAAEM,IAAI,EAAvB,QAAgCE,IAAG,gBAAWR,EAAEM,IAAI,KAC3DN,EAAES,MAAM,EACT,yBAAKL,UAAU,gBACX,yBAAKA,UAAU,gBACX,kCAAQJ,EAAEU,QAEd,yBAAKN,UAAU,SACX,yBAAKA,UAAU,SAAf,KACA,yBAAKA,UAAU,QAAf,KACA,yBAAKA,UAAU,YAAW,8BAAOJ,EAAES,SAEvC,yBAAKL,UAAU,aAAaO,QAAS,kBAAIV,EAAeD,EAAEM,QAC1D,yBAAKF,UAAU,cAAcO,QAAS,kBAAIb,EAAYE,EAAEM,SAG5D,yBAAKF,UAAU,QAAQO,QAAS,kBAAIb,EAAYE,EAAEM,OAC9C,yBAAKF,UAAU,gBACX,kCAAQJ,EAAEU,cAQlC,OACA,6BACI,yBAAKN,UAAU,SACX,gDACA,4BACI,wBAAIA,UAAU,OAAd,sBACA,qGAC0E,6BAD1E,oDACgI,6BADhI,uDAMR,yBAAKA,UAAU,gBAAe,kBAACF,EAAD,U,OCzCvBU,EAVC,SAAC,GAEb,IAF0B,IAAZf,EAAW,EAAXA,OACVY,EAAQ,EACJI,EAAI,EAAIA,EAAIhB,EAAOiB,OAAQD,IACT,IAAnBhB,EAAOgB,GAAGJ,QAAYA,GAAOZ,EAAOgB,GAAGJ,OAE9C,OAAO,yBAAKL,UAAU,YAClB,sCAAYK,EAAZ,OCcOM,EApBA,SAAC,GAAa,IAAZlB,EAAW,EAAXA,OAEPmB,EAAO,WACT,IAAMA,EAAOnB,EAAOM,KAAI,SAACH,GACrB,OAAGA,EAAES,MAAM,EACH,wBAAIL,UAAU,OAAOC,IAAOL,EAAEM,KAClC,yBAAKF,UAAU,UAAUJ,EAAEiB,MAC3B,yBAAKb,UAAU,WAAf,IAA2BJ,EAAES,OAC7B,yBAAKL,UAAU,SAAf,IAAyBJ,EAAEU,QAEpB,MAGf,OAAOM,GAEX,OAAO,yBAAKZ,UAAU,UAClB,kBAACY,EAAD,QCIOE,EApBI,SAAC,GAGhB,IAHuC,IACnCC,EACAC,EAFavB,EAAqB,EAArBA,OAAOwB,EAAc,EAAdA,UACLC,EAAY,EAEvBT,EAAI,EAAIA,EAAIhB,EAAOiB,OAASD,IAChCS,GAAezB,EAAOgB,GAAGJ,MAAMZ,EAAOgB,GAAGH,MAK7C,OAFAS,EAAaG,EAAkB,KAD/BF,EAAMG,KAAKC,MAAkB,MAAZF,IACoB,KAE9B,yBAAKlB,UAAU,OAClB,4BACI,4BAAI,2DAAqC,wCACzC,4BAAI,+CAAyB,iCAAW,IAAJgB,IACpC,wBAAIhB,UAAW,SAAQ,yCAAmB,iCAAOe,KAErD,uBAAGf,UAAU,SAASqB,KAAK,cAAcd,QAAS,kBAAIU,MAAtD,yB,6rBCVR,IA2CeK,EA3CF,SAAC,GAAa,IAAZ7B,EAAW,EAAXA,OAAW,EACG8B,oBAAS,GADZ,mBACfC,EADe,KACTC,EADS,KAEhBC,EAAOC,YAAH,KAIJC,EAAUC,IAAOC,QAAV,IAOIJ,GAcXT,EAAYtB,uBAAa,WACzB8B,GAAUD,GACVO,QAAQC,IAAIR,KACd,CAACA,IACL,OAAO,yBAAKxB,UAAY,QACpB,kBAAC,EAAD,CAAUP,OAAUA,IACpB,kBAAC,EAAD,CAAQA,OAAQA,IAChB,kBAAC,EAAD,CAAYA,OAAQA,EAAQwB,UAAWA,IACtCO,EAAO,kBAACI,EAAD,KACJ,6BACI,4BAAQzB,IAAI,mBAER,uCCyDL8B,MAnGf,WAAgB,IAAD,EACaV,mBAAS,CAAC,CAChCrB,IAAM,EACNW,KAAK,gBACLP,MAAO,IACPD,MAAQ,GACV,CACEH,IAAM,EACNW,KAAK,gBACLP,MAAO,IACPD,MAAQ,GACV,CACEH,IAAM,EACNW,KAAK,gBACLP,MAAO,IACPD,MAAQ,GACV,CACEH,IAAM,EACNW,KAAK,cACLP,MAAO,IACPD,MAAQ,GACV,CACEH,IAAM,EACNW,KAAK,iBACLP,MAAO,IACPD,MAAQ,GACV,CACEH,IAAM,EACNW,KAAK,iBACLP,MAAO,IACPD,MAAQ,GACV,CACEH,IAAM,EACNW,KAAK,iBACLP,MAAO,IACPD,MAAQ,GACV,CACEH,IAAM,EACNW,KAAK,eACLP,MAAO,IACPD,MAAQ,GACV,CACEH,IAAM,EACNW,KAAK,eACLP,MAAO,IACPD,MAAQ,GACV,CACEH,IAAM,EACNW,KAAK,oBACLP,MAAO,IACPD,MAAQ,GACV,CACEH,IAAM,GACNW,KAAK,cACLP,MAAO,IACPD,MAAQ,GACV,CACEH,IAAM,GACNW,KAAK,cACLP,MAAO,IACPD,MAAQ,KA5DC,mBACNZ,EADM,KACCyC,EADD,KA8DL1C,EAAeG,uBAAa,SAACwC,EAAOC,GACxC,IACIC,EADAC,EAAU,GAEd,GAAY,QAATH,EAAe,CAChB,IAAI,IAAI1B,EAAI,EAAIA,EAAGhB,EAAOiB,OAAOD,IAC5BhB,EAAOgB,GAAGP,MAAQkC,GACnBC,EAAI,eAAO5C,EAAOgB,GAAd,CAAkBJ,MAAOZ,EAAOgB,GAAGJ,MAAM,IAC7CiC,EAAYA,EAAUC,OAAOF,IAE7BC,EAAYA,EAAUC,OAAO9C,EAAOgB,IAGxCyB,EAAUI,QACN,GAAY,WAATH,EAAkB,CACzB,IAAI,IAAI1B,EAAI,EAAIA,EAAGhB,EAAOiB,OAAOD,IAC5BhB,EAAOgB,GAAGP,MAAQkC,GAEjBC,EAAI,eAAO5C,EAAOgB,GAAd,CAAkBJ,MAAOZ,EAAOgB,GAAGJ,MAAM,IAC7CiC,EAAYA,EAAUC,OAAOF,IAG/BC,EAAYA,EAAUC,OAAO9C,EAAOgB,IAGxCyB,EAAUI,GAEZP,QAAQC,IAAIvC,KACZ,CAACA,IACL,OAEE,6BACE,kBAAC,EAAD,CAAYD,aAAcA,EAAcC,OAAQA,IAChD,kBAAC,EAAD,CAAMA,OAAQA,MCtFA+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1B,QAAQ0B,MAAMA,EAAMC,c","file":"static/js/main.d76449ed.chunk.js","sourcesContent":["import React,{useCallback} from 'react';\r\nimport './style.scss';\r\n\r\n\r\nconst PosterPage = ({changeBasket,poster}) =>{\r\n    const onclick_add =  useCallback((v) =>{\r\n        changeBasket(\"add\",v);\r\n    },[changeBasket]);\r\n    const onclick_remove =  useCallback((v) =>{\r\n        changeBasket(\"remove\",v);\r\n    },[changeBasket]);\r\n\r\n    const Posters = () =>{ \r\n        const posters = poster.map((v)=>{\r\n            return(\r\n                <div className=\"poster\" key={v.idx}>\r\n                    <img src={`./img/poster${v.idx+1}.png`} alt={`poster${v.idx+1}`}/>\r\n                    {v.count>0?(\r\n                    <div className=\"mover basket\">\r\n                        <div className=\"mover_circle\">\r\n                            <span>${v.price}</span>\r\n                        </div>\r\n                        <div className=\"count\">\r\n                            <div className=\"minus\">-</div>\r\n                            <div className=\"plus\">+</div>\r\n                            <div className=\"countNum\"><span>{v.count}</span></div>\r\n                        </div>\r\n                        <div className=\"mover_left\" onClick={()=>onclick_remove(v.idx)}></div>\r\n                        <div className=\"mover_right\" onClick={()=>onclick_add(v.idx)}></div>\r\n                    </div>\r\n                    ):(\r\n                    <div className=\"mover\" onClick={()=>onclick_add(v.idx)}>\r\n                        <div className=\"mover_circle\">\r\n                            <span>${v.price}</span>\r\n                        </div>\r\n                    </div>)}\r\n                </div>\r\n            );\r\n        });\r\n        return posters;\r\n    }\r\n    return(\r\n    <div>\r\n        <div className=\"title\">\r\n            <h1>NSHC Poster mall</h1>\r\n            <ul>\r\n                <li className=\"tit\">Individual Posters</li>\r\n                <li>\r\n                    All posters are available and can be purchased as individuals or sets.<br/> Please email info@nshs.net for more information.<br/>\r\n                    refer to https://posterworks.piscatello.com/#shop\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <div className=\"postersFrame\"><Posters></Posters></div>\r\n    </div>);\r\n}\r\n\r\nexport default PosterPage;\r\n\r\n","import React from 'react';\r\n\r\nconst CartHead =({poster}) =>{\r\n    let count = 0 ; \r\n    for(let i = 0 ; i < poster.length; i++){\r\n        if(poster[i].count !==0){count+=poster[i].count};\r\n    }\r\n    return(<div className=\"carthead\">\r\n        <span>shop({count})</span>\r\n    </div>)\r\n}\r\n\r\nexport default CartHead;","import React from 'react';\r\n\r\nconst Basket = ({poster}) =>{\r\n    \r\n    const List = ()=>{ \r\n        const List = poster.map((v)=>{\r\n            if(v.count>0){\r\n            return (<li className=\"list\" key = {v.idx}>\r\n                <div className=\"author\">{v.name}</div>\r\n                <div className=\"counter\">x{v.count}</div>\r\n                <div className=\"price\">${v.price}</div>\r\n            </li>)}else{\r\n                return \"\";\r\n            }\r\n        })\r\n        return List;\r\n    }\r\n    return(<div className=\"basket\">\r\n        <List/>\r\n    </div>);\r\n}\r\n\r\nexport default Basket;","import React from 'react';\r\n\r\nconst Calculator = ({poster,changeFin}) =>{\r\n    let totalPrice = 0,totalposter=0 ; \r\n    let tax ;\r\n    for(let i = 0 ; i < poster.length ; i++){\r\n        totalposter += poster[i].count*poster[i].price;\r\n    }\r\n    tax = Math.round(totalposter*8.875);\r\n    totalPrice = totalposter + tax*0.01 +14.5\r\n    \r\n    return(<div className=\"cal\">\r\n        <ul>\r\n            <li><div>shipping (international) :</div><div>$14.50</div></li>\r\n            <li><div>Tax (8.875%) :</div><div>${tax*0.01}</div></li>\r\n            <li className =\"total\"><div>TOTAL : </div><div>${totalPrice}</div></li>\r\n        </ul>\r\n        <a className=\"finish\" href=\"javascript:\" onClick={()=>changeFin()}>PayPal 결제</a>\r\n    </div>);\r\n}\r\n\r\n\r\nexport default Calculator;","import React from 'react';\r\nimport CartHead from './cart_head';\r\nimport Basket from './cart_basket';\r\nimport Calculator from './cart_calc';\r\nimport styled,{keyframes} from 'styled-components';\r\nimport { useState,useCallback } from 'react';\r\n\r\nconst Cart = ({poster}) =>{\r\n    const [finOn,setFinON] = useState(false);//state로 해보고 그냥도 해보자\r\n    const move = keyframes`\r\n        0% {top:100%;}\r\n        100% {top:0;}\r\n    `;\r\n    const CartFin = styled.section`\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        background-color: rgba(0,0,0,0.7);\r\n        animation: ${move} 0.5s ease-in-out;\r\n        div{\r\n            width: 369px;\r\n            height: 611px;\r\n            position : absolute;\r\n            top:50%;\r\n            left:50%; \r\n            transform: translate(-50%,-50%);\r\n            iframe {\r\n                width:100%;\r\n                height:100%;\r\n            }\r\n        }\r\n    `;\r\n    const changeFin = useCallback( () =>{\r\n          setFinON(!finOn);\r\n          console.log(finOn);\r\n      },[finOn]);\r\n    return(<div className = \"cart\">\r\n        <CartHead poster = {poster}/>\r\n        <Basket poster={poster}/>\r\n        <Calculator poster={poster} changeFin={changeFin}/>\r\n        {finOn? <CartFin>\r\n            <div>\r\n                <iframe src=\"./popup.html\"></iframe>\r\n            </div>\r\n        </CartFin>:(<></>)}\r\n    </div>);\r\n}\r\n\r\nexport default Cart;","import React,{useState,useCallback} from 'react';\nimport PosterPage from './poster';\nimport Cart from \"./cart\";\n\nfunction App() {\n  const [poster,setPoster] =useState([{ // 포스터 리스트 전역적 관리\n      idx : 0,\n      name:\"Milton Glaser\",\n      price: 275,\n      count : 1\n  },{\n      idx : 1,\n      name:\"Glen Cummings\",\n      price: 150,\n      count : 0\n  },{\n      idx : 2,\n      name:\"Jessica Walsh\",\n      price: 150,\n      count : 0\n  },{\n      idx : 3,\n      name:\"Jake Barton\",\n      price: 175,\n      count : 0\n  },{\n      idx : 4,\n      name:\"Julia Hoffmann\",\n      price: 150,\n      count : 0\n  },{\n      idx : 5,\n      name:\"Jessica Hische\",\n      price: 150,\n      count : 0\n  },{\n      idx : 6,\n      name:\"Matteo Bologna\",\n      price: 115,\n      count : 0\n  },{\n      idx : 7,\n      name:\"David Gibson\",\n      price: 175,\n      count : 0\n  },{\n      idx : 8,\n      name:\"David Carson\",\n      price: 225,\n      count : 0\n  },{\n      idx : 9,\n      name:\"Stefan Sagmeister\",\n      price: 150,\n      count : 0\n  },{\n      idx : 10,\n      name:\"Paula Scher\",\n      price: 150,\n      count : 0\n  },{\n      idx : 11,\n      name:\"Paula Scher\",\n      price: 150,\n      count : 0\n  }]);\n    const changeBasket = useCallback( (fnName,value) =>{\n      let newBasket=[];\n      let item;\n      if(fnName==='add'){\n        for(let i = 0 ; i< poster.length;i++){\n          if(poster[i].idx === value){\n            item = {...poster[i], count: poster[i].count+1}\n            newBasket = newBasket.concat(item);\n          }else{\n            newBasket = newBasket.concat(poster[i]);\n          }\n        }\n        setPoster(newBasket);\n      }else if(fnName==='remove'){\n        for(let i = 0 ; i< poster.length;i++){\n          if(poster[i].idx === value){\n            \n              item = {...poster[i], count: poster[i].count-1}\n              newBasket = newBasket.concat(item);\n            \n          }else{\n            newBasket = newBasket.concat(poster[i]);\n          }\n        }\n        setPoster(newBasket);\n      }\n      console.log(poster)\n    },[poster]);\n  return (\n    \n    <div>\n      <PosterPage changeBasket={changeBasket} poster={poster}/>\n      <Cart poster={poster}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}